<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSP初赛 - C++基本语法</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.8/dist/chart.umd.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/atom-one-dark-dark.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/languages/cpp.min.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3B82F6', // 主色调：蓝色
                        secondary: '#10B981', // 辅助色：绿色
                        syntax: '#F59E0B', // 语法部分：黄色
                        example: '#8B5CF6', // 示例部分：紫色
                        darkbg: '#F8FAFC', // 浅灰白背景
                        cardbg: '#FFFFFF', // 卡片背景
                        codebg: '#1E293B', // 代码背景
                    },
                    fontFamily: {
                        mono: ['Consolas', 'Monaco', 'Courier New', 'monospace'],
                        sans: ['Inter', 'system-ui', 'sans-serif'],
                    },
                }
            }
        }
    </script>
    <style type="text/tailwindcss">
        @layer utilities {
            .content-auto {
                content-visibility: auto;
            }
            .hover-scale {
                @apply transition-transform duration-300 hover:scale-[1.02];
            }
            .topic-card {
                @apply bg-cardbg rounded-lg p-5 shadow-sm hover:shadow-md transition-shadow duration-300 mb-8;
            }
            .code-block {
                @apply bg-codebg text-gray-100 rounded-lg p-4 overflow-x-auto my-4 text-sm font-mono;
            }
            .syntax-highlight {
                @apply text-syntax font-medium;
            }
            .demo-box {
                @apply border border-gray-200 rounded-lg overflow-hidden my-4;
            }
            .demo-output {
                @apply bg-gray-50 p-4 border-t border-gray-200 font-mono text-sm;
            }
            .tip-box {
                @apply bg-blue-50 border-l-4 border-primary p-4 rounded-r my-4;
            }
            .example-box {
                @apply bg-purple-50 border border-purple-100 rounded-lg p-4 my-4;
            }
        }
    </style>
</head>
<body class="bg-darkbg text-gray-800 font-sans min-h-screen">
    <!-- 顶部导航栏 -->
    <header class="bg-white shadow-sm sticky top-0 z-50">
        <div class="container mx-auto px-4 py-3 flex justify-between items-center">
            <div class="flex items-center space-x-3">
                <i class="fa fa-code text-primary text-3xl"></i>
                <h1 class="text-2xl font-bold text-primary tracking-tight">CSP初赛指南</h1>
            </div>
            <div class="hidden md:flex items-center space-x-6">
                <a href="#" class="text-gray-700 hover:text-primary transition-colors duration-200">首页</a>
                <a href="#" class="text-gray-700 hover:text-primary transition-colors duration-200">语法基础</a>
                <a href="#" class="text-gray-700 hover:text-primary transition-colors duration-200">算法专题</a>
                <a href="#" class="text-gray-700 hover:text-primary transition-colors duration-200">历年真题</a>
            </div>
            <div class="md:hidden">
                <button class="text-gray-700">
                    <i class="fa fa-bars text-xl"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- 面包屑导航 -->
    <div class="bg-white border-b border-gray-200 py-2">
        <div class="container mx-auto px-4">
            <nav class="flex text-sm" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-3">
                    <li class="inline-flex items-center">
                        <a href="#" class="text-gray-600 hover:text-primary">
                            <i class="fa fa-home mr-1"></i>首页
                        </a>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <i class="fa fa-angle-right mx-2 text-gray-400"></i>
                            <a href="#" class="text-gray-600 hover:text-primary">CSP初赛</a>
                        </div>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <i class="fa fa-angle-right mx-2 text-gray-400"></i>
                            <a href="#" class="text-gray-600 hover:text-primary">C++语法</a>
                        </div>
                    </li>
                    <li aria-current="page">
                        <div class="flex items-center">
                            <i class="fa fa-angle-right mx-2 text-gray-400"></i>
                            <span class="text-primary font-medium">基本语法</span>
                        </div>
                    </li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- 主要内容区 -->
    <main class="container mx-auto px-4 py-8">
        <!-- 页面标题 -->
        <div class="bg-gradient-to-r from-primary/5 to-primary/10 rounded-lg p-6 mb-8">
            <div class="flex flex-col md:flex-row md:items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-primary mb-2">C++基本语法</h1>
                    <p class="text-gray-700">
                        变量、常量、运算符与表达式是C++编程的基础，也是CSP初赛的核心考点。
                        本页面将系统讲解相关知识，并提供动态演示和解题技巧。
                    </p>
                </div>
                <div class="mt-4 md:mt-0">
                    <div class="flex space-x-3">
                        <a href="#variables" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-md transition-all flex items-center">
                            <i class="fa fa-book mr-2"></i> 开始学习
                        </a>
                        <a href="#examples" class="bg-white border border-primary text-primary hover:bg-primary/5 px-4 py-2 rounded-md transition-all flex items-center">
                            <i class="fa fa-list-alt mr-2"></i> 查看例题
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- 变量 -->
        <section id="variables" class="topic-card">
            <h2 class="text-2xl font-bold text-primary mb-6 flex items-center">
                <i class="fa fa-variable mr-2"></i> 变量
            </h2>
            
            <div class="space-y-6">
                <div>
                    <h3 class="text-xl font-semibold mb-3">变量的定义与作用</h3>
                    <p class="text-gray-700 mb-4">
                        变量是程序中用于存储数据的容器，具有名称、类型和值三个基本要素。在CSP初赛中，变量类型和范围是重点考察内容。
                    </p>
                    
                    <div class="demo-box">
                        <div class="p-4">
                            <h4 class="font-medium mb-3">变量定义演示</h4>
                            <div class="flex flex-wrap gap-3">
                                <div class="flex-1 min-w-[250px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">变量类型:</label>
                                    <select id="var-type" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50">
                                        <option value="int">int (整数)</option>
                                        <option value="long long">long long (长整数)</option>
                                        <option value="float">float (单精度浮点数)</option>
                                        <option value="double">double (双精度浮点数)</option>
                                        <option value="char">char (字符)</option>
                                    </select>
                                </div>
                                <div class="flex-1 min-w-[250px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">变量名:</label>
                                    <input type="text" id="var-name" value="a" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50">
                                </div>
                                <div class="flex-1 min-w-[250px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">初始值:</label>
                                    <input type="text" id="var-value" value="10" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50">
                                </div>
                            </div>
                            <div class="mt-4">
                                <button id="generate-var" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-md transition-all">
                                    生成代码
                                </button>
                            </div>
                        </div>
                        <div class="code-block">
                            <code id="var-code" class="language-cpp">// 变量定义示例
int a = 10;</code>
                        </div>
                        <div class="demo-output" id="var-output">
                            变量a的类型: int<br>
                            变量a的值: 10<br>
                            占用内存: 4字节<br>
                            取值范围: -2147483648 到 2147483647
                        </div>
                    </div>
                </div>
                
                <div>
                    <h3 class="text-xl font-semibold mb-3">CSP常用变量类型</h3>
                    <div class="overflow-x-auto">
                        <table class="min-w-full border-collapse">
                            <thead>
                                <tr class="bg-gray-50">
                                    <th class="border border-gray-200 px-4 py-2 text-left">类型</th>
                                    <th class="border border-gray-200 px-4 py-2 text-left">长度(字节)</th>
                                    <th class="border border-gray-200 px-4 py-2 text-left">取值范围</th>
                                    <th class="border border-gray-200 px-4 py-2 text-left">CSP初赛重点</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="border border-gray-200 px-4 py-2 font-medium">int</td>
                                    <td class="border border-gray-200 px-4 py-2">4</td>
                                    <td class="border border-gray-200 px-4 py-2">-2<sup>31</sup> ~ 2<sup>31</sup>-1</td>
                                    <td class="border border-gray-200 px-4 py-2">最常用，注意溢出问题</td>
                                </tr>
                                <tr class="bg-gray-50">
                                    <td class="border border-gray-200 px-4 py-2 font-medium">long long</td>
                                    <td class="border border-gray-200 px-4 py-2">8</td>
                                    <td class="border border-gray-200 px-4 py-2">-2<sup>63</sup> ~ 2<sup>63</sup>-1</td>
                                    <td class="border border-gray-200 px-4 py-2">处理大整数，CSP常考</td>
                                </tr>
                                <tr>
                                    <td class="border border-gray-200 px-4 py-2 font-medium">float</td>
                                    <td class="border border-gray-200 px-4 py-2">4</td>
                                    <td class="border border-gray-200 px-4 py-2">约±3.4×10<sup>38</sup></td>
                                    <td class="border border-gray-200 px-4 py-2">精度较低，少用</td>
                                </tr>
                                <tr class="bg-gray-50">
                                    <td class="border border-gray-200 px-4 py-2 font-medium">double</td>
                                    <td class="border border-gray-200 px-4 py-2">8</td>
                                    <td class="border border-gray-200 px-4 py-2">约±1.8×10<sup>308</sup></td>
                                    <td class="border border-gray-200 px-4 py-2">处理实数，精度问题</td>
                                </tr>
                                <tr>
                                    <td class="border border-gray-200 px-4 py-2 font-medium">char</td>
                                    <td class="border border-gray-200 px-4 py-2">1</td>
                                    <td class="border border-gray-200 px-4 py-2">-128 ~ 127 或 0 ~ 255</td>
                                    <td class="border border-gray-200 px-4 py-2">ASCII码转换是重点</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="tip-box mt-4">
                        <p class="font-medium text-primary"><i class="fa fa-lightbulb-o mr-2"></i> 解题技巧</p>
                        <p class="text-sm text-gray-700 mt-1">
                            在CSP初赛中，整数溢出是常见考点。当题目中的数值可能超过2×10<sup>9</sup>时，应使用long long类型。
                            记住：10<sup>9</sup>以内用int，10<sup>18</sup>以内用long long。
                        </p>
                    </div>
                </div>
            </div>
        </section>

        <!-- 常量 -->
        <section id="constants" class="topic-card">
            <h2 class="text-2xl font-bold text-primary mb-6 flex items-center">
                <i class="fa fa-lock mr-2"></i> 常量
            </h2>
            
            <div class="space-y-6">
                <div>
                    <h3 class="text-xl font-semibold mb-3">常量的定义与使用</h3>
                    <p class="text-gray-700 mb-4">
                        常量是程序中固定不变的值，在C++中有多种定义方式。在CSP初赛中，常量的类型和表示方法是常见考点。
                    </p>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <h4 class="font-semibold mb-3">字面常量</h4>
                            <pre class="code-block"><code class="language-cpp">123;        // 整数常量
3.14;       // 浮点常量
'A';        // 字符常量
"hello";    // 字符串常量
true;       // 布尔常量</code></pre>
                        </div>
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <h4 class="font-semibold mb-3">定义常量的方式</h4>
                            <pre class="code-block"><code class="language-cpp">// 1. 使用#define预处理指令
#define PI 3.14159

// 2. 使用const关键字
const int MAXN = 1000;
const double E = 2.71828;</code></pre>
                        </div>
                    </div>
                </div>
                
                <div>
                    <h3 class="text-xl font-semibold mb-3">不同进制的常量表示</h3>
                    <p class="text-gray-700 mb-4">
                        C++支持多种进制的整数常量，这是CSP初赛选择题的重要考点：
                    </p>
                    
                    <div class="demo-box">
                        <div class="p-4">
                            <h4 class="font-medium mb-3">进制转换演示</h4>
                            <div class="flex flex-wrap gap-3">
                                <div class="flex-1 min-w-[200px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">十进制数:</label>
                                    <input type="number" id="decimal-num" value="42" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50">
                                </div>
                                <div class="flex-1 min-w-[200px]">
                                    <button id="convert-btn" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-md transition-all mt-6">
                                        转换
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="code-block">
                            <code id="base-code" class="language-cpp">// 不同进制表示42
int d = 42;      // 十进制 (默认)
int o = 052;     // 八进制 (前缀0)
int h = 0x2A;    // 十六进制 (前缀0x)
int b = 0b101010;// 二进制 (前缀0b, C++11起支持)</code>
                        </div>
                        <div class="demo-output" id="base-output">
                            十进制: 42<br>
                            八进制: 052 (等于十进制42)<br>
                            十六进制: 0x2A (等于十进制42)<br>
                            二进制: 0b101010 (等于十进制42)
                        </div>
                    </div>
                    
                    <div class="tip-box mt-4">
                        <p class="font-medium text-primary"><i class="fa fa-lightbulb-o mr-2"></i> 解题技巧</p>
                        <p class="text-sm text-gray-700 mt-1">
                            在CSP初赛中，经常考察不同进制间的转换。记住：八进制以0开头，十六进制以0x开头，二进制以0b开头。
                            对于选择题，可以使用Windows计算器的程序员模式辅助计算。
                        </p>
                    </div>
                </div>
            </div>
        </section>

        <!-- 运算符 -->
        <section id="operators" class="topic-card">
            <h2 class="text-2xl font-bold text-primary mb-6 flex items-center">
                <i class="fa fa-calculator mr-2"></i> 运算符
            </h2>
            
            <div class="space-y-6">
                <div>
                    <h3 class="text-xl font-semibold mb-3">算术运算符</h3>
                    <p class="text-gray-700 mb-4">
                        算术运算符用于执行基本的数学运算，是CSP初赛的必考内容：
                    </p>
                    
                    <div class="demo-box">
                        <div class="p-4">
                            <h4 class="font-medium mb-3">算术运算演示</h4>
                            <div class="flex flex-wrap gap-3">
                                <div class="flex-1 min-w-[150px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">操作数1:</label>
                                    <input type="number" id="op1" value="10" class="w-full p-2 border border-gray-300 rounded-md">
                                </div>
                                <div class="flex-1 min-w-[100px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">运算符:</label>
                                    <select id="operator" class="w-full p-2 border border-gray-300 rounded-md">
                                        <option value="+">+ (加)</option>
                                        <option value="-">- (减)</option>
                                        <option value="*">* (乘)</option>
                                        <option value="/">/ (除)</option>
                                        <option value="%">% (取余)</option>
                                    </select>
                                </div>
                                <div class="flex-1 min-w-[150px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">操作数2:</label>
                                    <input type="number" id="op2" value="3" class="w-full p-2 border border-gray-300 rounded-md">
                                </div>
                                <div class="flex items-end">
                                    <button id="calc-btn" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-md transition-all">
                                        计算
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="code-block">
                            <code id="arith-code" class="language-cpp">int a = 10;
int b = 3;
int result = a / b;  // 结果为3，整数除法会截断小数部分
// 其他运算:
// a + b = 13
// a - b = 7
// a * b = 30
// a % b = 1</code>
                        </div>
                        <div class="demo-output" id="arith-output">
                            10 / 3 = 3 (整数除法，截断小数部分)<br>
                            注意：C++中整数除法会自动截断小数部分，而非四舍五入
                        </div>
                    </div>
                </div>
                
                <div>
                    <h3 class="text-xl font-semibold mb-3">赋值与复合赋值运算符</h3>
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <pre class="code-block"><code class="language-cpp">// 简单赋值
int a = 5;

// 复合赋值
a += 3;  // 等价于 a = a + 3;  结果：a = 8
a -= 2;  // 等价于 a = a - 2;  结果：a = 6
a *= 4;  // 等价于 a = a * 4;  结果：a = 24
a /= 5;  // 等价于 a = a / 5;  结果：a = 4
a %= 3;  // 等价于 a = a % 3;  结果：a = 1</code></pre>
                    </div>
                </div>
                
                <div>
                    <h3 class="text-xl font-semibold mb-3">自增与自减运算符</h3>
                    <p class="text-gray-700 mb-4">
                        自增(++)和自减(--)运算符是CSP初赛的重点和难点，需要注意前缀和后缀的区别：
                    </p>
                    
                    <div class="demo-box">
                        <div class="p-4">
                            <h4 class="font-medium mb-3">自增运算演示</h4>
                            <div class="flex flex-wrap gap-3">
                                <div class="flex-1 min-w-[200px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">初始值:</label>
                                    <input type="number" id="incr-val" value="5" class="w-full p-2 border border-gray-300 rounded-md">
                                </div>
                                <div class="flex-1 min-w-[200px]">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">类型:</label>
                                    <div class="flex gap-2">
                                        <label class="inline-flex items-center">
                                            <input type="radio" name="incr-type" value="prefix" checked class="mr-1"> 前缀 (++a)
                                        </label>
                                        <label class="inline-flex items-center">
                                            <input type="radio" name="incr-type" value="suffix" class="mr-1"> 后缀 (a++)
                                        </label>
                                    </div>
                                </div>
                                <div class="flex items-end">
                                    <button id="incr-btn" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-md transition-all">
                                        执行
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="code-block">
                            <code id="incr-code" class="language-cpp">int a = 5;
int b = ++a;  // 前缀自增：先增后用
// 结果：a = 6, b = 6</code>
                        </div>
                        <div class="demo-output" id="incr-output">
                            a的初始值：5<br>
                            执行int b = ++a;<br>
                            结果：a = 6, b = 6<br>
                            前缀自增：先增加变量值，再使用变量值
                        </div>
                    </div>
                    
                    <div class="tip-box mt-4">
                        <p class="font-medium text-primary"><i class="fa fa-lightbulb-o mr-2"></i> 解题技巧</p>
                        <p class="text-sm text-gray-700 mt-1">
                            自增/自减运算符是CSP初赛选择题的高频考点。记住：前缀形式(++a)是"先加后用"，后缀形式(a++)是"先用后加"。
                            在复杂表达式中，建议拆分运算步骤以避免出错。
                        </p>
                    </div>
                </div>
                
                <div>
                    <h3 class="text-xl font-semibold mb-3">运算符优先级</h3>
                    <p class="text-gray-700 mb-4">
                        运算符优先级决定了表达式中运算的执行顺序，这是CSP初赛的重点考察内容：
                    </p>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full border-collapse">
                            <thead>
                                <tr class="bg-gray-50">
                                    <th class="border border-gray-200 px-4 py-2 text-left">优先级</th>
                                    <th class="border border-gray-200 px-4 py-2 text-left">运算符</th>
                                    <th class="border border-gray-200 px-4 py-2 text-left">说明</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="border border-gray-200 px-4 py-2">1</td>
                                    <td class="border border-gray-200 px-4 py-2">()</td>
                                    <td class="border border-gray-200 px-4 py-2">括号</td>
                                </tr>
                                <tr class="bg-gray-50">
                                    <td class="border border-gray-200 px-4 py-2">2</td>
                                    <td class="border border-gray-200 px-4 py-2">++ --</td>
                                    <td class="border border-gray-200 px-4 py-2">自增、自减(前缀)</td>
                                </tr>
                                <tr>
                                    <td class="border border-gray-200 px-4 py-2">3</td>
                                    <td class="border border-gray-200 px-4 py-2">* / %</td>
                                    <td class="border border-gray-200 px-4 py-2">乘、除、取余</td>
                                </tr>
                                <tr class="bg-gray-50">
                                    <td class="border border-gray-200 px-4 py-2">4</td>
                                    <td class="border border-gray-200 px-4 py-2">+ -</td>
                                    <td class="border border-gray-200 px-4 py-2">加、减</td>
                                </tr>
                                <tr>
                                    <td class="border border-gray-200 px-4 py-2">5</td>
                                    <td class="border border-gray-200 px-4 py-2">= += -= *= /= %=</td>
                                    <td class="border border-gray-200 px-4 py-2">赋值运算符</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </section>

        <!-- 表达式 -->
        <section id="expressions" class="topic-card">
            <h2 class="text-2xl font-bold text-primary mb-6 flex items-center">
                <i class="fa fa-sitemap mr-2"></i> 表达式
            </h2>
            
            <div class="space-y-6">
                <div>
                    <h3 class="text-xl font-semibold mb-3">表达式的求值顺序</h3>
                    <p class="text-gray-700 mb-4">
                        表达式是运算符和操作数的组合，其求值顺序由运算符优先级和结合性决定。
                    </p>
                    
                    <div class="demo-box">
                        <div class="p-4">
                            <h4 class="font-medium mb-3">表达式求值演示</h4>
                            <div class="mb-3">
                                <label class="block text-sm font-medium text-gray-700 mb-2">表达式:</label>
                                <input type="text" id="expr" value="3 + 4 * 2 / (1 - 5)" class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50">
                            </div>
                            <button id="eval-btn" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-md transition-all">
                                求值并解析
                            </button>
                        </div>
                        <div class="code-block">
                            <code id="expr-code" class="language-cpp">// 表达式求值过程
3 + 4 * 2 / (1 - 5)

// 步骤1: 计算括号内的值
= 3 + 4 * 2 / (-4)

// 步骤2: 计算乘法
= 3 + 8 / (-4)

// 步骤3: 计算除法
= 3 + (-2)

// 步骤4: 计算加法
= 1</code>
                        </div>
                        <div class="demo-output" id="expr-output">
                            表达式: 3 + 4 * 2 / (1 - 5)<br>
                            结果: 1<br>
                            求值顺序：先括号，再乘除，最后加减
                        </div>
                    </div>
                </div>
                
                <div>
                    <h3 class="text-xl font-semibold mb-3">类型转换</h3>
                    <p class="text-gray-700 mb-4">
                        当表达式中混合使用不同类型的操作数时，C++会自动进行类型转换：
                    </p>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <h4 class="font-semibold mb-3">隐式类型转换</h4>
                            <pre class="code-block"><code class="language-cpp">int a = 5;
double b = 2.5;
double c = a + b;  // a自动转换为double类型
// 结果：c = 7.5

int d = a + (int)b;  // 强制类型转换，b变为2
// 结果：d = 7</code></pre>
                        </div>
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <h4 class="font-semibold mb-3">CSP常见类型转换问题</h4>
                            <pre class="code-block"><code class="language-cpp">// 问题1：整数除法导致精度丢失
int x = 3, y = 2;
double z = x / y;  // 结果为1.0而非1.5

// 解决方法：先转换为浮点型
double z = (double)x / y;  // 结果为1.5

// 问题2：溢出问题
int a = 2147483647;
int b = a + 1;  // 溢出，结果为-2147483648</code></pre>
                        </div>
                    </div>
                    
                    <div class="tip-box mt-4">
                        <p class="font-medium text-primary"><i class="fa fa-lightbulb-o mr-2"></i> 解题技巧</p>
                        <p class="text-sm text-gray-700 mt-1">
                            在CSP初赛中，类型转换是易错点。当需要进行除法运算并保留小数时，必须先将操作数转换为浮点类型。
                            同时要注意整数溢出问题，特别是在计算较大数值时。
                        </p>
                    </div>
                </div>
            </div>
        </section>

        <!-- 例题解析 -->
        <section id="examples" class="topic-card">
            <h2 class="text-2xl font-bold text-primary mb-6 flex items-center">
                <i class="fa fa-pencil mr-2"></i> CSP初赛例题解析
            </h2>
            
            <div class="space-y-8">
                <!-- 例题1 -->
                <div class="example-box">
                    <h3 class="text-lg font-semibold text-example mb-3">例题1：变量类型与溢出</h3>
                    <p class="mb-3"><strong>题目：</strong>以下C++代码的输出结果是？</p>
                    <pre class="code-block"><code class="language-cpp">#include &lt;iostream&gt;
using namespace std;

int main() {
    int a = 2147483647;
    int b = a + 1;
    cout << b << endl;
    return 0;
}</code></pre>
                    
                    <p class="mt-4 font-medium">解析：</p>
                    <p class="text-gray-700 mb-2">
                        int类型的取值范围是-2147483648到2147483647。当a取最大值2147483647时，再加1会导致整数溢出。
                    </p>
                    <p class="text-gray-700 mb-2">
                        在二进制中，整数以补码形式存储，最大值加1会导致溢出，结果变为最小值-2147483648。
                    </p>
                    
                    <p class="mt-3 font-medium">答案：<span class="syntax-highlight">-2147483648</span></p>
                </div>
                
                <!-- 例题2 -->
                <div class="example-box">
                    <h3 class="text-lg font-semibold text-example mb-3">例题2：自增运算符</h3>
                    <p class="mb-3"><strong>题目：</strong>以下C++代码的输出结果是？</p>
                    <pre class="code-block"><code class="language-cpp">#include &lt;iostream&gt;
using namespace std;

int main() {
    int a = 5;
    int b = a++ * 2 + ++a;
    cout << b << endl;
    return 0;
}</code></pre>
                    
                    <p class="mt-4 font-medium">解析：</p>
                    <p class="text-gray-700 mb-2">
                        这道题考察自增运算符的前缀和后缀区别：
                    </p>
                    <ol class="list-decimal pl-6 mb-2 space-y-1">
                        <li>初始a = 5</li>
                        <li>a++是后缀自增，先使用a的值5，然后a变为6</li>
                        <li>++a是前缀自增，先将a从6变为7，再使用7</li>
                        <li>计算：5 * 2 + 7 = 10 + 7 = 17</li>
                    </ol>
                    
                    <p class="mt-3 font-medium">答案：<span class="syntax-highlight">17</span></p>
                </div>
                
                <!-- 例题3 -->
                <div class="example-box">
                    <h3 class="text-lg font-semibold text-example mb-3">例题3：表达式求值</h3>
                    <p class="mb-3"><strong>题目：</strong>表达式 10 / 3 * 3 + 10 % 3 的计算结果是？</p>
                    
                    <p class="mt-4 font-medium">解析：</p>
                    <p class="text-gray-700 mb-2">
                        根据运算符优先级，先计算乘除和取余，再计算加法，且同级运算从左到右：
                    </p>
                    <ol class="list-decimal pl-6 mb-2 space-y-1">
                        <li>10 / 3 = 3（整数除法，截断小数）</li>
                        <li>3 * 3 = 9</li>
                        <li>10 % 3 = 1（取余运算）</li>
                        <li>9 + 1 = 10</li>
                    </ol>
                    
                    <p class="mt-3 font-medium">答案：<span class="syntax-highlight">10</span></p>
                </div>
                
                <!-- 例题4 -->
                <div class="example-box">
                    <h3 class="text-lg font-semibold text-example mb-3">例题4：进制转换</h3>
                    <p class="mb-3"><strong>题目：</strong>十六进制数0x1A3对应的十进制数是？</p>
                    
                    <p class="mt-4 font-medium">解析：</p>
                    <p class="text-gray-700 mb-2">
                        十六进制转十进制计算方法：
                    </p>
                    <p class="text-gray-700 mb-2 pl-4">
                        0x1A3 = 1 × 16² + 10 × 16¹ + 3 × 16⁰ = 256 + 160 + 3 = 419
                    </p>
                    <p class="text-gray-700 text-sm italic">
                        注：十六进制中A代表10，B代表11，...，F代表15
                    </p>
                    
                    <p class="mt-3 font-medium">答案：<span class="syntax-highlight">419</span></p>
                </div>
            </div>
        </section>

        <!-- 解题技巧总结 -->
        <section id="skills" class="topic-card">
            <h2 class="text-2xl font-bold text-primary mb-6 flex items-center">
                <i class="fa fa-star mr-2"></i> 解题技巧总结
            </h2>
            
            <div class="space-y-4">
                <div class="bg-gray-50 p-5 rounded-lg">
                    <h3 class="text-xl font-semibold mb-4">CSP初赛基本语法解题要点</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <h4 class="font-medium text-primary mb-2 flex items-center">
                                <i class="fa fa-check-circle mr-2"></i> 变量与类型
                            </h4>
                            <ul class="list-disc pl-6 space-y-1 text-gray-700">
                                <li>牢记各类型的取值范围，特别是int和long long的区别</li>
                                <li>整数溢出是常见考点，注意当数值超过2×10⁹时需用long long</li>
                                <li>char类型可以表示ASCII码，0-127是标准ASCII码</li>
                            </ul>
                        </div>
                        
                        <div>
                            <h4 class="font-medium text-primary mb-2 flex items-center">
                                <i class="fa fa-check-circle mr-2"></i> 常量与进制
                            </h4>
                            <ul class="list-disc pl-6 space-y-1 text-gray-700">
                                <li>记住不同进制的前缀：0(八进制)、0x(十六进制)、0b(二进制)</li>
                                <li>掌握进制间的转换方法，尤其是十进制与十六进制的转换</li>
                                <li>注意#define和const定义常量的区别</li>
                            </ul>
                        </div>
                        
                        <div>
                            <h4 class="font-medium text-primary mb-2 flex items-center">
                                <i class="fa fa-check-circle mr-2"></i> 运算符
                            </h4>
                            <ul class="list-disc pl-6 space-y-1 text-gray-700">
                                <li>整数除法会截断小数部分，而非四舍五入</li>
                                <li>取余运算结果的符号与被除数相同</li>
                                <li>前缀++和后缀++的区别是必考点，务必掌握</li>
                                <li>熟记运算符优先级，不确定时可加括号</li>
                            </ul>
                        </div>
                        
                        <div>
                            <h4 class="font-medium text-primary mb-2 flex items-center">
                                <i class="fa fa-check-circle mr-2"></i> 表达式
                            </h4>
                            <ul class="list-disc pl-6 space-y-1 text-gray-700">
                                <li>表达式求值顺序由优先级和结合性决定</li>
                                <li>不同类型混合运算时注意隐式类型转换</li>
                                <li>复杂表达式可分步计算，避免一步出错</li>
                                <li>注意运算过程中的中间结果是否会溢出</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="mt-6 p-4 bg-primary/10 rounded-lg">
                        <h4 class="font-medium text-primary mb-2">备考建议</h4>
                        <p class="text-gray-700 text-sm">
                            基本语法是CSP初赛的基础，占选择题的30%左右。建议多做历年真题中的相关题目，
                            重点练习自增自减、表达式求值和类型转换类题目。对于复杂表达式，可手动分步计算，
                            避免一步到位导致的错误。同时，熟悉各类运算符的优先级和结合性，这是快速准确解题的关键。
                        </p>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <!-- 页脚 -->
    <footer class="bg-white border-t border-gray-200 py-6 mt-12">
        <div class="container mx-auto px-4">
            <div class="text-center text-gray-600 text-sm">
                <p>© 2023 CSP初赛学习指南 - 专注于信息学奥赛基础知识讲解</p>
                <p class="mt-2">本网站内容仅供学习参考，如有侵权请联系删除</p>
            </div>
        </div>
    </footer>

    <script>
        // 初始化代码高亮
        hljs.highlightAll();
        
        // 变量演示功能
        document.getElementById('generate-var').addEventListener('click', function() {
            const type = document.getElementById('var-type').value;
            const name = document.getElementById('var-name').value;
            const value = document.getElementById('var-value').value;
            
            let code = `// 变量定义示例\n${type} ${name} = ${value};`;
            document.getElementById('var-code').textContent = code;
            hljs.highlightElement(document.getElementById('var-code'));
            
            let length, range;
            switch(type) {
                case 'int':
                    length = 4;
                    range = '-2147483648 到 2147483647';
                    break;
                case 'long long':
                    length = 8;
                    range = '-9223372036854775808 到 9223372036854775807';
                    break;
                case 'float':
                    length = 4;
                    range = '约±3.4×10^38';
                    break;
                case 'double':
                    length = 8;
                    range = '约±1.8×10^308';
                    break;
                case 'char':
                    length = 1;
                    range = '-128 ~ 127 或 0 ~ 255';
                    break;
            }
            
            let output = `变量${name}的类型: ${type}<br>`;
            output += `变量${name}的值: ${value}<br>`;
            output += `占用内存: ${length}字节<br>`;
            output += `取值范围: ${range}`;
            document.getElementById('var-output').innerHTML = output;
        });
        
        // 进制转换演示
        document.getElementById('convert-btn').addEventListener('click', function() {
            const decimal = parseInt(document.getElementById('decimal-num').value);
            if (isNaN(decimal)) return;
            
            const octal = decimal.toString(8);
            const hexadecimal = decimal.toString(16).toUpperCase();
            const binary = decimal.toString(2);
            
            let code = `// 不同进制表示${decimal}\n`;
            code += `int d = ${decimal};      // 十进制 (默认)\n`;
            code += `int o = 0${octal};     // 八进制 (前缀0)\n`;
            code += `int h = 0x${hexadecimal};    // 十六进制 (前缀0x)\n`;
            code += `int b = 0b${binary};// 二进制 (前缀0b, C++11起支持)`;
            document.getElementById('base-code').textContent = code;
            hljs.highlightElement(document.getElementById('base-code'));
            
            let output = `十进制: ${decimal}<br>`;
            output += `八进制: 0${octal} (等于十进制${decimal})<br>`;
            output += `十六进制: 0x${hexadecimal} (等于十进制${decimal})<br>`;
            output += `二进制: 0b${binary} (等于十进制${decimal})`;
            document.getElementById('base-output').innerHTML = output;
        });
        
        // 算术运算演示
        document.getElementById('calc-btn').addEventListener('click', function() {
            const op1 = parseInt(document.getElementById('op1').value);
            const op2 = parseInt(document.getElementById('op2').value);
            const operator = document.getElementById('operator').value;
            if (isNaN(op1) || isNaN(op2)) return;
            
            let result, explanation;
            switch(operator) {
                case '+':
                    result = op1 + op2;
                    explanation = `${op1} + ${op2} = ${result}`;
                    break;
                case '-':
                    result = op1 - op2;
                    explanation = `${op1} - ${op2} = ${result}`;
                    break;
                case '*':
                    result = op1 * op2;
                    explanation = `${op1} * ${op2} = ${result}`;
                    break;
                case '/':
                    result = op1 / op2;
                    explanation = `${op1} / ${op2} = ${Math.floor(result)} (整数除法，截断小数部分)`;
                    break;
                case '%':
                    result = op1 % op2;
                    explanation = `${op1} % ${op2} = ${result} (取余运算，结果符号与被除数相同)`;
                    break;
            }
            
            let code = `int a = ${op1};\nint b = ${op2};\n`;
            code += `int result = a ${operator} b;  // 结果为${Math.floor(result)}\n`;
            code += `// 其他运算:\n`;
            code += `// a + b = ${op1 + op2}\n`;
            code += `// a - b = ${op1 - op2}\n`;
            code += `// a * b = ${op1 * op2}\n`;
            code += `// a % b = ${op1 % op2}`;
            document.getElementById('arith-code').textContent = code;
            hljs.highlightElement(document.getElementById('arith-code'));
            
            document.getElementById('arith-output').innerHTML = explanation + '<br>注意：C++中整数除法会自动截断小数部分，而非四舍五入';
        });
        
        // 自增运算演示
        document.getElementById('incr-btn').addEventListener('click', function() {
            const initial = parseInt(document.getElementById('incr-val').value);
            if (isNaN(initial)) return;
            
            const isPrefix = document.querySelector('input[name="incr-type"][value="prefix"]').checked;
            
            let a, b;
            let code, output;
            
            if (isPrefix) {
                a = initial + 1;
                b = a;
                code = `int a = ${initial};\nint b = ++a;  // 前缀自增：先增后用\n// 结果：a = ${a}, b = ${b}`;
                output = `a的初始值：${initial}<br>执行int b = ++a;<br>结果：a = ${a}, b = ${b}<br>前缀自增：先增加变量值，再使用变量值`;
            } else {
                b = initial;
                a = initial + 1;
                code = `int a = ${initial};\nint b = a++;  // 后缀自增：先用后增\n// 结果：a = ${a}, b = ${b}`;
                output = `a的初始值：${initial}<br>执行int b = a++;<br>结果：a = ${a}, b = ${b}<br>后缀自增：先使用变量值，再增加变量值`;
            }
            
            document.getElementById('incr-code').textContent = code;
            hljs.highlightElement(document.getElementById('incr-code'));
            document.getElementById('incr-output').innerHTML = output;
        });
        
        // 表达式求值演示
        document.getElementById('eval-btn').addEventListener('click', function() {
            const expr = document.getElementById('expr').value;
            try {
                // 简单的表达式解析和求值
                const result = eval(expr);
                
                // 构建解析步骤（简化版）
                let steps = `// 表达式求值过程\n${expr}\n\n`;
                
                // 这里只是简单示例，实际解析会更复杂
                steps += `// 步骤1: 按照运算符优先级计算\n`;
                steps += `// 步骤2: 从左到右计算同级运算\n`;
                steps += `// 最终结果\n= ${result}`;
                
                document.getElementById('expr-code').textContent = steps;
                hljs.highlightElement(document.getElementById('expr-code'));
                document.getElementById('expr-output').innerHTML = `表达式: ${expr}<br>结果: ${result}<br>求值顺序：先括号，再乘除，最后加减`;
            } catch (e) {
                document.getElementById('expr-output').innerHTML = '表达式格式错误，请输入有效的数学表达式';
            }
        });
    </script>
</body>
</html>